// <auto-generated />
using login_registration.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using System;

namespace login_registration.Migrations
{
    [DbContext(typeof(UserContext))]
    [Migration("20180612223924_CreateDataBase")]
    partial class CreateDataBase
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.IdentityColumn)
                .HasAnnotation("ProductVersion", "2.0.1-rtm-125");

            modelBuilder.Entity("login_registration.Models.Account", b =>
                {
                    b.Property<int>("AccountId")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("Balance");

                    b.Property<int>("UserId");

                    b.HasKey("AccountId");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("accounts");
                });

            modelBuilder.Entity("login_registration.Models.Transaction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("AccountId");

                    b.Property<DateTime>("CreatedAt");

                    b.Property<int>("Difference");

                    b.Property<string>("StringDiff");

                    b.Property<string>("TransactionType");

                    b.Property<DateTime>("UpdatedAt");

                    b.HasKey("Id");

                    b.HasIndex("AccountId");

                    b.ToTable("transactions");
                });

            modelBuilder.Entity("login_registration.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Email")
                        .IsRequired();

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(105);

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(105);

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(105);

                    b.HasKey("UserId");

                    b.ToTable("users");
                });

            modelBuilder.Entity("login_registration.Models.Account", b =>
                {
                    b.HasOne("login_registration.Models.User", "user")
                        .WithOne("account")
                        .HasForeignKey("login_registration.Models.Account", "UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("login_registration.Models.Transaction", b =>
                {
                    b.HasOne("login_registration.Models.Account")
                        .WithMany("transactions")
                        .HasForeignKey("AccountId");
                });
#pragma warning restore 612, 618
        }
    }
}
